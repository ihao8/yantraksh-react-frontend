{"version":3,"sources":["screens/supplier/forms/bidNow.js"],"names":["__webpack_exports__","props","_useState","useState","vehicle","least_bid","_useState2","Object","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","form","setForm","handleInputChange","event","target","value","type","checked","name","_objectSpread","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","handleSubmit","_ref","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","preventDefault","bidNow","match","params","id","alert","t0","JSON","stringify","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","method","onSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","for","reactstrap__WEBPACK_IMPORTED_MODULE_13__","onChange","selected","disabled","reactstrap__WEBPACK_IMPORTED_MODULE_14__","color","size"],"mappings":"4dAKeA,EAAA,iBAACC,GAAU,IAAAC,EAEEC,mBAAS,CAC7BC,QAAW,GACXC,UAAa,KAJKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEfO,EAFeH,EAAA,GAETI,EAFSJ,EAAA,GAUhBK,EAAoB,SAACC,GACvB,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DG,EAAOJ,EAAOI,KAEpBP,uVAAOQ,CAAA,GACAT,EADAF,OAAAY,EAAA,EAAAZ,CAAA,GAEFU,EAAOH,MAIVM,EAAY,eAAAC,EAAAd,OAAAe,EAAA,EAAAf,CAAAgB,EAAAC,EAAAC,KAAG,SAAAC,EAAOd,GAAP,OAAAW,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBlB,EAAMmB,iBADWH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGPE,YAAOvB,EAAMR,EAAMgC,MAAMC,OAAOC,IAHzB,OAKbC,MAAM,QALOR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAObQ,MAAME,KAAKC,UAALX,EAAAS,KAPO,yBAAAT,EAAAY,SAAAd,EAAA,iBAAH,gBAAAe,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,GAWlB,OACIC,EAAArB,EAAAsB,cAACC,EAAA,EAAD,KACIF,EAAArB,EAAAsB,cAACE,EAAA,EAAD,KACIH,EAAArB,EAAAsB,cAAA,6BAEJD,EAAArB,EAAAsB,cAACG,EAAA,EAAD,KACIJ,EAAArB,EAAAsB,cAACI,EAAA,EAAD,CAAMC,OAAQ,OAAQC,SAAUhC,GAC5ByB,EAAArB,EAAAsB,cAACO,EAAA,EAAD,CAAK5C,MAAI,GACLoC,EAAArB,EAAAsB,cAACQ,EAAA,EAAD,CAAKC,GAAI,GACLV,EAAArB,EAAAsB,cAACU,EAAA,EAAD,KACIX,EAAArB,EAAAsB,cAACW,EAAA,EAAD,CAAOC,IAAI,UAAX,mBAEAb,EAAArB,EAAAsB,cAACa,EAAA,EAAD,CAAO5C,KAAK,SAASE,KAAK,UAAUkB,GAAG,UAAUyB,SAAUjD,EAAoBG,MAAOL,EAAKL,SACvFyC,EAAArB,EAAAsB,cAAA,UAAQe,UAAQ,EAACC,UAAQ,GAAzB,oBACAjB,EAAArB,EAAAsB,cAAA,UAAQhC,MAAM,KAAd,kBACA+B,EAAArB,EAAAsB,cAAA,UAAQhC,MAAM,KAAd,kBAKZ+B,EAAArB,EAAAsB,cAACQ,EAAA,EAAD,CAAKC,GAAI,GACLV,EAAArB,EAAAsB,cAACU,EAAA,EAAD,KACIX,EAAArB,EAAAsB,cAACW,EAAA,EAAD,CAAOC,IAAI,eAAX,aACAb,EAAArB,EAAAsB,cAACa,EAAA,EAAD,CAAO5C,KAAK,OAAOE,KAAK,YAAYkB,GAAG,YAAYyB,SAAUjD,EAAoBG,MAAOL,EAAKJ,eAUzGwC,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WACVD,EAAArB,EAAAsB,cAACiB,EAAA,EAAD,CAAQC,MAAO,UAAWC,KAAM,MAAhC,UA5BJ,gBA6BIpB,EAAArB,EAAAsB,cAACiB,EAAA,EAAD,CAAQC,MAAO,OAAQC,KAAM,MAA7B","file":"static/js/57.1ed0bc76.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Label, Row,} from 'reactstrap';\nimport {bidNow} from \"../../../helpers/api\";\n\n\nexport default (props) => {\n\n    const [form, setForm] = useState({\n        'vehicle': '',\n        'least_bid': '',\n\n\n    });\n\n\n    const handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        setForm({\n            ...form,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            await bidNow(form, props.match.params.id);\n\n            alert('done')\n        } catch (e) {\n            alert(JSON.stringify(e));\n        }\n    };\n\n    return (\n        <Card>\n            <CardHeader>\n                <strong>Post Truck</strong>\n            </CardHeader>\n            <CardBody>\n                <Form method={'post'} onSubmit={handleSubmit}>\n                    <Row form>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"origin\">Type of vehicle</Label>\n                                {/*<Input type=\"text\" id=\"vehicle\" placeholder=\"ex: Delhi\" name={\"vehicle\"}/>*/}\n                                <Input type=\"select\" name=\"vehicle\" id=\"vehicle\" onChange={handleInputChange}  value={form.vehicle} >\n                                    <option selected disabled>---- Select ----</option>\n                                    <option value=\"1\">Market Vehicle</option>\n                                    <option value=\"2\">Own Vehicle</option>\n                                </Input>\n\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label for=\"destination\">Least Bid</Label>\n                                <Input type=\"text\" name=\"least_bid\" id=\"least_bid\" onChange={handleInputChange}  value={form.least_bid} />\n\n\n                            </FormGroup>\n                        </Col>\n\n                    </Row>\n\n\n\n                    <br/><br/><br/>\n                    <Button color={\"primary\"} size={\"lg\"}>Create</Button> &nbsp;&nbsp;&nbsp;\n                    <Button color={\"link\"} size={\"lg\"}>Cancel</Button>\n                </Form>\n            </CardBody>\n        </Card>\n    )\n}\n"],"sourceRoot":""}