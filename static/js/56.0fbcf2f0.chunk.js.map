{"version":3,"sources":["screens/signUpScreenShipper.js","screens/shipper/signUpScreen.js"],"names":["USERNAME_REGEX","SignUpScreenSupplier","props","_this","Object","_Users_faisal_Desktop_yantraksh_ooo_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_faisal_Desktop_yantraksh_ooo_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_faisal_Desktop_yantraksh_ooo_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","handleChange","event","target","value","type","checked","name","setState","_Users_faisal_Desktop_yantraksh_ooo_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","onSubmit","_ref","_Users_faisal_Desktop_yantraksh_ooo_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_faisal_Desktop_yantraksh_ooo_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","e","errors","data","_this$state","username","email","password","company_code","company_name","wrap","_context","prev","next","preventDefault","state","match","push","isUsernameAvailable","sent","available","concat","confirmpass","length","alert","join","signUpUserSupplier","signInAction","t0","console","log","signUpUserShipper","t1","stop","_x","apply","arguments","companiesList","_this2","getCompanyShipper","CREATE_ACCOUNT_SHIPPER","then","result","catch","CREATE_ACCOUNT_SUPPLIER","_this3","isAuthenticated","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","react_router_es_Redirect__WEBPACK_IMPORTED_MODULE_23__","to","redirectTo","split","className","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","lg","xl","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_17__","placeholder","onChange","htmlFor","id","selected","map","element","key","confPass","reactstrap__WEBPACK_IMPORTED_MODULE_18__","color","block","reactstrap__WEBPACK_IMPORTED_MODULE_19__","Component","connect","auth","authenticated","navigation","dispatch","signIn","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_signUpScreenShipper__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/56.0fbcf2f0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    Col,\n    Container,\n    Form,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row\n} from 'reactstrap';\n\nimport {\n    isUsernameAvailable,\n    signUpUserShipper,\n    signUpUserSupplier,\n    getCompanyShipper,\n    CREATE_ACCOUNT_SUPPLIER, CREATE_ACCOUNT_SHIPPER\n} from \"../helpers/api\";\nimport {signIn} from \"../actions/auth\";\nimport {connect} from \"react-redux\";\nimport Redirect from \"react-router/es/Redirect\";\n\n// const NAME_REGEX = '^[A-Z a-z]';\nconst USERNAME_REGEX = '^[\\\\w.@+-]+$';\n\n// const PASSWORD_REGEX = '^.{6}.+$';\n\nclass SignUpScreenSupplier extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmpass: '',\n            company_code: '',\n            company_name: '',\n            companiesList: [],\n        };\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        let errors = [];\n\n        // if (!this.state.first_name)\n        //     errors.push('Name is not valid.');\n        //\n        // if (!this.state.password.match(PASSWORD_REGEX))\n        //     errors.push('Password not valid');\n\n        if (!this.state.username.match(USERNAME_REGEX))\n            errors.push('Username not valid');\n        else {\n            const data = await isUsernameAvailable(this.state.username);\n            if (!data.available)\n                errors.push(`Username '${data.username}' not available`);\n        }\n        if (this.state.confirmpass !== this.state.password)\n            errors.push('Password and confirm password is not same');\n        if (errors.length !== 0)\n            alert(errors.join('\\n'));\n        else {\n            if (this.props.type === \"Supplier\") {\n                try {\n                    await signUpUserSupplier(this.state);\n                    alert('User created successful');\n                    this.props.signInAction(this.state.username, this.state.password)\n                } catch (e) {\n                    alert('Problem creating user');\n                    console.log(e)\n                }\n            }\n            if (this.props.type === \"Shipper\") {\n                try {\n                    const {username, email, password, company_code, company_name} = this.state;\n                    await signUpUserShipper({\n                        username: username,\n                        email: email,\n                        password: password,\n                        company_name: company_name,\n                        company_code: company_code\n                    });\n                    alert('User created successful');\n                    this.props.signInAction(this.state.username, this.state.password)\n                } catch (e) {\n                    alert('Problem creating user');\n                    console.log(e)\n                }\n            }\n        }\n    };\n\n    componentDidMount() {\n        if (this.props.type === \"Shipper\") {\n            getCompanyShipper(CREATE_ACCOUNT_SHIPPER)\n                .then((result) => {\n                    this.setState({companiesList: result})\n                })\n                .catch(e => console.log(e))\n        } else if (this.props.type === \"Supplier\") {\n            getCompanyShipper(CREATE_ACCOUNT_SUPPLIER)\n                .then((result) => {\n                    this.setState({companiesList: result})\n                })\n                .catch(e => console.log(e))\n        }\n    }\n\n    render() {\n        const {companiesList} = this.state;\n        if (this.props.isAuthenticated)\n            return <Redirect to={`${this.props.redirectTo.split('#')[1]}`}/>;\n        return (\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\n                            <Card className=\"mx-4\">\n                                <CardBody className=\"p-4\">\n                                    <Form onSubmit={this.onSubmit}>\n                                        <input type=\"hidden\" className={\"form-control\"} name=\"user-type\"\n                                               value={this.props.type}/>\n                                        <h1>Register for {this.props.type}</h1>\n                                        <p className=\"text-muted\">Create your account</p>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-user\"/>\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"text\"\n                                                   placeholder={'Username'}\n                                                   className={\"form-control\"}\n                                                   name={\"username\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.username}/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>@</InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"email\" name={\"email\"}\n                                                   className={\"form-control\"}\n                                                   placeholder={'Email'}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.email}/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\"/>\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"password\"\n                                                   placeholder={'Password'}\n                                                   name={\"password\"}\n                                                   className={\"form-control\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.password}/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\"/>\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"password\"\n                                                   placeholder={'Confirm Password'}\n                                                   name={\"confirmpass\"}\n                                                   className={\"form-control\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.confirmpass}/>\n\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <div className=\"input-group-prepend\">\n                                                <label className=\"input-group-text\"\n                                                       htmlFor=\"inputGroupSelect01\">Company</label>\n                                            </div>\n                                            <select onChange={(e) => {\n                                                this.setState({company_name: e.target.value})\n                                            }} className=\"custom-select\" id=\"inputGroupSelect01\">\n                                                <option selected>Choose...</option>\n                                                {companiesList.map((element) => (\n                                                        <option key={element.company_name}>{element.company_name}</option>\n                                                    )\n                                                )}\n                                            </select>\n                                        </InputGroup>\n                                            <InputGroup className=\"mb-4\">\n                                                <InputGroupAddon addonType=\"prepend\">\n                                                    <InputGroupText>\n                                                        <i className=\"icon-lock\"/>\n                                                    </InputGroupText>\n                                                </InputGroupAddon>\n                                                <input type=\"number\"\n                                                       placeholder={'Company Code'}\n                                                       name={\"company_code\"}\n                                                       className={\"form-control\"}\n                                                       onChange={this.handleChange}\n                                                       value={this.state.company_code}/>\n                                            </InputGroup>\n                                        {this.state.password !== this.state.confPass ? \"Password and confirm password should be same\" : \"\"}\n                                        <br/>\n                                        <br/>\n                                        <Button color=\"success\" block>Create Account</Button>\n                                    </Form>\n                                </CardBody>\n                                <CardFooter className=\"p-4\"/>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.authenticated,\n    redirectTo: state.navigation.redirectTo\n});\nconst mapDispatchToProps = (dispatch) => ({\n    signInAction: (username, password) => dispatch(signIn(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreenSupplier);\n","import React from \"react\";\nimport SignUpScreen from \"../signUpScreenShipper\";\n\nexport default () => (\n    <SignUpScreen type={'Shipper'}/>\n)\n"],"sourceRoot":""}