{"version":3,"sources":["screens/signUpScreenShipper.js","screens/shipper/signUpScreen.js"],"names":["USERNAME_REGEX","SignUpScreenSupplier","props","_this","Object","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","handleChange","event","target","value","type","checked","name","setState","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","onSubmit","_ref","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_faisal_yantraksh_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","e","errors","data","wrap","_context","prev","next","preventDefault","console","log","state","username","match","push","isUsernameAvailable","sent","available","concat","confirmpass","password","length","alert","join","signUpUserSupplier","signInAction","t0","signUpUserShipper","t1","stop","_x","apply","arguments","first_name","email","isAuthenticated","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","react_router_es_Redirect__WEBPACK_IMPORTED_MODULE_23__","to","redirectTo","split","className","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","lg","xl","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_17__","onChange","confPass","reactstrap__WEBPACK_IMPORTED_MODULE_18__","color","block","reactstrap__WEBPACK_IMPORTED_MODULE_19__","Component","connect","auth","authenticated","navigation","dispatch","signIn","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_signUpScreenShipper__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/48.a5d31e5b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    Col,\n    Container,\n    Form,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row\n} from 'reactstrap';\n\nimport {isUsernameAvailable, signUpUserShipper, signUpUserSupplier} from \"../helpers/api\";\nimport {signIn} from \"../actions/auth\";\nimport {connect} from \"react-redux\";\nimport Redirect from \"react-router/es/Redirect\";\n\n// const NAME_REGEX = '^[A-Z a-z]';\nconst USERNAME_REGEX = '^[\\\\w.@+-]+$';\n\n// const PASSWORD_REGEX = '^.{6}.+$';\n\nclass SignUpScreenSupplier extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            first_name: '',\n            username: '',\n            email: '',\n            password: '',\n            confirmpass: ''\n        };\n    }\n\n    handleChange = (event) => {\n\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        console.log(this.state);\n\n        let errors = [];\n\n        // if (!this.state.first_name)\n        //     errors.push('Name is not valid.');\n        //\n        // if (!this.state.password.match(PASSWORD_REGEX))\n        //     errors.push('Password not valid');\n\n        if (!this.state.username.match(USERNAME_REGEX))\n            errors.push('Username not valid');\n\n        else {\n            const data = await isUsernameAvailable(this.state.username);\n            if (!data.available)\n                errors.push(`Username '${data.username}' not available`);\n        }\n\n        if (this.state.confirmpass !== this.state.password)\n            errors.push('Password and confirm password is not same');\n\n        if (errors.length !== 0)\n            alert(errors.join('\\n'));\n        else {\n\n            if (this.props.type === \"Supplier\") {\n                try {\n                    await signUpUserSupplier(this.state);\n                    alert('User created successful');\n                    this.props.signInAction(this.state.username, this.state.password)\n\n                } catch (e) {\n                    alert('Problem creating user');\n                    console.log(e)\n                }\n\n            }\n\n            if (this.props.type === \"Shipper\") {\n                try {\n                    await signUpUserShipper(this.state);\n                    alert('User created successful');\n                    this.props.signInAction(this.state.username, this.state.password)\n\n                } catch (e) {\n                    alert('Problem creating user');\n                    console.log(e)\n                }\n\n            }\n\n\n        }\n    };\n\n\n    render() {\n        if (this.props.isAuthenticated)\n            return <Redirect to={`${this.props.redirectTo.split('#')[1]}`}/>;\n\n\n        return (\n\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\n                            <Card className=\"mx-4\">\n                                <CardBody className=\"p-4\">\n                                    <Form onSubmit={this.onSubmit}>\n                                        <input type=\"hidden\" className={\"form-control\"} name=\"user-type\"\n                                               value={this.props.type}/>\n                                        <h1>Register for {this.props.type}</h1>\n                                        <p className=\"text-muted\">Create your account</p>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-user\"></i>\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"text\" className={\"form-control\"} name={\"username\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.username}/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>@</InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"email\" name={\"email\"} className={\"form-control\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.email}/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\"></i>\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"password\" name={\"password\"} className={\"form-control\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.password}/>\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\"></i>\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"password\" name={\"confirmpass\"} className={\"form-control\"}\n                                                   onChange={this.handleChange}\n                                                   value={this.state.confirmpass}/>\n\n                                        </InputGroup>\n                                            {this.state.password !== this.state.confPass ? \"Password and confirm password should be same\" : \"\"}\n                                        <br></br>\n                                        <br></br>\n                                        <Button color=\"success\" block>Create Account</Button>\n                                    </Form>\n                                </CardBody>\n                                <CardFooter className=\"p-4\">\n\n                                </CardFooter>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.authenticated,\n    redirectTo: state.navigation.redirectTo\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    signInAction: (username, password) => dispatch(signIn(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreenSupplier);\n","import React from \"react\";\nimport SignUpScreen from \"../signUpScreenShipper\";\n\nexport default () => (\n    <SignUpScreen type={'Shipper'}/>\n)\n"],"sourceRoot":""}